// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "shift+enter",
        "command": "python.execInTerminal"
    },
    {
        "key": "tab",
        "command": "runCommands",
        "args": {
          "commands": [
            "workbench.action.acceptSelectedQuickOpenItem",
            "workbench.action.closeQuickOpen",
            {
              "command": "workbench.action.closeEditorsToTheLeft",
              "when": "activeEditorIsNotPreview",
            },
          ]
        },
        "when": "inFilesPicker && inQuickOpen",
      },
      {
        "key": "ctrl+b shift+'",
        "command": "workbench.action.splitEditorDown"
      },
      {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorDown"
      },
      {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorRight"
      },
      {
        "key": "ctrl+b shift+5",
        "command": "workbench.action.splitEditorLeft"
      },
      {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorLeft"
      },
      {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorUp"
      },
      {
        "key": "ctrl+b z",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
      },
      {
        "key": "cmd+k cmd+m",
        "command": "-workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
      },
      {
        "key": "ctrl+b x",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": "ctrl+b up",
        "command": "workbench.action.navigateUp"
      },
      {
        "key": "ctrl+b down",
        "command": "workbench.action.navigateDown"
      },
      {
        "key": "ctrl+b left",
        "command": "workbench.action.navigateLeft"
      },
      {
        "key": "ctrl+b right",
        "command": "workbench.action.navigateRight"
      },
      {
        "key": "ctrl+b ctrl+b",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+cmd+v",
        "command": "editor.action.pasteAsText"
      },
      {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "vim.active && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+a",
        "command": "editor.action.selectAll",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+f",
        "command": "actions.find",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+s",
        "command": "workbench.action.files.save",
        // "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen",
        // "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "shift+ctrl+p",
        "command": "workbench.action.showCommands",
        // "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "cmd+x",
        "command": "editor.action.clipboardCutAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+z",
        "command": "undo",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+y",
        "command": "redo",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+shift+z",
        "command": "redo",
        "when": "vim.active && vim.mode == 'Insert'"
      },
      {
        "key": "ctrl+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+]",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+[",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
      },
      {
        "key": "ctrl+b b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b ]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+b [",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+x",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "vim.active && vim.mode == 'Insert'"
    },
    {
        "key": "alt+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "vim.active && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "textInputFocus"
    },
    {
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "sideBarFocus && !inputFocus && !whichkeyActive"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "g",
		"command": "-magit.refresh",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "g",
		"command": "vspacecode.showMagitRefreshMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
    },
    {
        "key": "ctrl+b pagedown",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b pageup",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b `",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "ctrl+b shift+right",
      "command": "workbench.action.nextEditor"
    },
    {
      "key": "ctrl+b shift+left",
      "command": "workbench.action.previousEditor"
    },
    {
      "key": "cmd+g",
      "command": "workbench.action.gotoLine"
    },
    {
      "key": "ctrl+g",
      "command": "-workbench.action.gotoLine"
    }
]
